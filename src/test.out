		.data
		.align 2
.z:		.space 4
		.data
		.align 2
.x:		.space 4
		.data
		.align 2
.a:		.space 4
		.data
		.align 2
.b:		.space 4
		.text
_f:
		sw    $ra, 0($sp)	#PUSH
		subu  $sp, $sp, 4
		sw    $fp, 0($sp)	#PUSH
		subu  $sp, $sp, 4
		addu  $fp, $sp, 28
		subu  $sp, $sp, 16
		sw    1, 0($sp)	#PUSH
		subu  $sp, $sp, 4
		la    $t0, -12($fp)
		sw    $t0, 0($sp)	#PUSH
		subu  $sp, $sp, 4
		lw    $t1, 8($sp)
		sw    $t1, 0($t0)
		addu  $sp, $sp, 4		#disregard temps, leaving result on stack
		lw    $t0, 4($sp)	#POP
		addu  $sp, $sp, 4
		li    $t0, 2		#load value into T0
		sw    $t0, 0($sp)	#PUSH
		subu  $sp, $sp, 4
		la    $t0, _a
		sw    $t0, 0($sp)	#PUSH
		subu  $sp, $sp, 4
		lw    $t1, 8($sp)
		sw    $t1, 0($t0)
		addu  $sp, $sp, 4		#disregard temps, leaving result on stack
		lw    $t0, 4($sp)	#POP
		addu  $sp, $sp, 4
		sw    0, 0($sp)	#PUSH
		subu  $sp, $sp, 4
		la    $t0, -12($fp)
		sw    $t0, 0($sp)	#PUSH
		subu  $sp, $sp, 4
		lw    $t1, 8($sp)
		sw    $t1, 0($t0)
		addu  $sp, $sp, 4		#disregard temps, leaving result on stack
		lw    $t0, 4($sp)	#POP
		addu  $sp, $sp, 4
		lw    $t0, -20($fp)
		sw    $t0, 0($sp)	#PUSH
		subu  $sp, $sp, 4
		lw    $a0, 4($sp)	#POP
		addu  $sp, $sp, 4
		li    $v0, 1
		syscall
		b     _f_Exit		#return fn
		li    $t0, 1		#load value into T0
		sw    $t0, 0($sp)	#PUSH
		subu  $sp, $sp, 4
		li    $t0, 2		#load value into T0
		sw    $t0, 0($sp)	#PUSH
		subu  $sp, $sp, 4
		lw    $t1, 4($sp)	#POP
		addu  $sp, $sp, 4
		lw    $t0, 4($sp)	#POP
		addu  $sp, $sp, 4
		add   $t0, $t0, $t1
		sw    $t0, 0($sp)	#PUSH
		subu  $sp, $sp, 4
		la    $t0, _a
		sw    $t0, 0($sp)	#PUSH
		subu  $sp, $sp, 4
		lw    $t1, 8($sp)
		sw    $t1, 0($t0)
		addu  $sp, $sp, 4		#disregard temps, leaving result on stack
		lw    $t0, 4($sp)	#POP
		addu  $sp, $sp, 4
		lw    $t0, -16($fp)
		sw    $t0, 0($sp)	#PUSH
		subu  $sp, $sp, 4
		li    $t0, 4		#load value into T0
		sw    $t0, 0($sp)	#PUSH
		subu  $sp, $sp, 4
		lw    $t1, 4($sp)	#POP
		addu  $sp, $sp, 4
		lw    $t0, 4($sp)	#POP
		addu  $sp, $sp, 4
		add   $t0, $t0, $t1
		sw    $t0, 0($sp)	#PUSH
		subu  $sp, $sp, 4
		la    $t0, -8($fp)
		sw    $t0, 0($sp)	#PUSH
		subu  $sp, $sp, 4
		lw    $t1, 8($sp)
		sw    $t1, 0($t0)
		addu  $sp, $sp, 4		#disregard temps, leaving result on stack
		lw    $t0, 4($sp)	#POP
		addu  $sp, $sp, 4
		li    $v0, 5
		syscall
		la    $t0, _a
		sw    $t0, 0($sp)	#PUSH
		subu  $sp, $sp, 4
		addu  $sp, $sp, 4
		sw    $v0, 0($t0)
		lw    $t0, -8($fp)
		sw    $t0, 0($sp)	#PUSH
		subu  $sp, $sp, 4
		la    $t0, 0($fp)
		sw    $t0, 0($sp)	#PUSH
		subu  $sp, $sp, 4
		lw    $t1, 8($sp)
		addu  $t1, $t1, 1
		sw    $t1, 0($t0)
		addu  $sp, $sp, 8		#restore SP
		lw    $t0, -8($fp)
		sw    $t0, 0($sp)	#PUSH
		subu  $sp, $sp, 4
		la    $t0, 0($fp)
		sw    $t0, 0($sp)	#PUSH
		subu  $sp, $sp, 4
		lw    $t1, 8($sp)
		subu  $t1, $t1, 1
		sw    $t1, 0($t0)
		addu  $sp, $sp, 8		#restore SP
		lw    $t0, _a		#load value into T0
		sw    $t0, 0($sp)	#PUSH
		subu  $sp, $sp, 4
		lw    $t0, -8($fp)
		sw    $t0, 0($sp)	#PUSH
		subu  $sp, $sp, 4
		lw    $t1, 4($sp)	#POP
		addu  $sp, $sp, 4
		lw    $t0, 4($sp)	#POP
		addu  $sp, $sp, 4
		bgt   $t0, $t1, .L0
		sw    0, 0($sp)	#PUSH
		subu  $sp, $sp, 4
		b     .L1
.L0:
		sw    1, 0($sp)	#PUSH
		subu  $sp, $sp, 4
.L1:
		lw    $t0, 4($sp)	#POP
		addu  $sp, $sp, 4
		beq   $t0, 0, .L2
		sw    1, 0($sp)	#PUSH
		subu  $sp, $sp, 4
		la    $t0, -4($fp)
		sw    $t0, 0($sp)	#PUSH
		subu  $sp, $sp, 4
		lw    $t1, 8($sp)
		sw    $t1, 0($t0)
		addu  $sp, $sp, 4		#disregard temps, leaving result on stack
		lw    $t0, 4($sp)	#POP
		addu  $sp, $sp, 4
.L2:
		lw    $t0, _a		#load value into T0
		sw    $t0, 0($sp)	#PUSH
		subu  $sp, $sp, 4
		lw    $t0, -8($fp)
		sw    $t0, 0($sp)	#PUSH
		subu  $sp, $sp, 4
		lw    $t1, 4($sp)	#POP
		addu  $sp, $sp, 4
		lw    $t0, 4($sp)	#POP
		addu  $sp, $sp, 4
		blt   $t0, $t1, .L3
		sw    0, 0($sp)	#PUSH
		subu  $sp, $sp, 4
		b     .L4
.L3:
		sw    1, 0($sp)	#PUSH
		subu  $sp, $sp, 4
.L4:
		lw    $t0, 4($sp)	#POP
		addu  $sp, $sp, 4
		beq   $t0, 0, .L5
		lw    $t0, -8($fp)
		sw    $t0, 0($sp)	#PUSH
		subu  $sp, $sp, 4
		li    $t0, 1		#load value into T0
		sw    $t0, 0($sp)	#PUSH
		subu  $sp, $sp, 4
		lw    $t1, 4($sp)	#POP
		addu  $sp, $sp, 4
		lw    $t0, 4($sp)	#POP
		addu  $sp, $sp, 4
		add   $t0, $t0, $t1
		sw    $t0, 0($sp)	#PUSH
		subu  $sp, $sp, 4
		la    $t0, _a
		sw    $t0, 0($sp)	#PUSH
		subu  $sp, $sp, 4
		lw    $t1, 8($sp)
		sw    $t1, 0($t0)
		addu  $sp, $sp, 4		#disregard temps, leaving result on stack
		lw    $t0, 4($sp)	#POP
		addu  $sp, $sp, 4
.L5:
		lw    $t0, _a		#load value into T0
		sw    $t0, 0($sp)	#PUSH
		subu  $sp, $sp, 4
		lw    $t0, -8($fp)
		sw    $t0, 0($sp)	#PUSH
		subu  $sp, $sp, 4
		lw    $t1, 4($sp)	#POP
		addu  $sp, $sp, 4
		lw    $t0, 4($sp)	#POP
		addu  $sp, $sp, 4
		ble   $t0, $t1, .L6
		sw    0, 0($sp)	#PUSH
		subu  $sp, $sp, 4
		b     .L7
.L6:
		sw    1, 0($sp)	#PUSH
		subu  $sp, $sp, 4
.L7:
		lw    $t0, 4($sp)	#POP
		addu  $sp, $sp, 4
		beq   $t0, 0, .L8
		lw    $t0, -12($fp)
		sw    $t0, 0($sp)	#PUSH
		subu  $sp, $sp, 4
		lw    $t0, 4($sp)	#POP
		addu  $sp, $sp, 4
		beq   $t0, 1, .L9
		sw    1, 0($sp)	#PUSH
		subu  $sp, $sp, 4
		b     .L10
.L9:
		sw    0, 0($sp)	#PUSH
		subu  $sp, $sp, 4
.L10:
		la    $t0, -12($fp)
		sw    $t0, 0($sp)	#PUSH
		subu  $sp, $sp, 4
		lw    $t1, 8($sp)
		sw    $t1, 0($t0)
		addu  $sp, $sp, 4		#disregard temps, leaving result on stack
		lw    $t0, 4($sp)	#POP
		addu  $sp, $sp, 4
.L8:
		lw    $t0, _a		#load value into T0
		sw    $t0, 0($sp)	#PUSH
		subu  $sp, $sp, 4
		lw    $t0, -8($fp)
		sw    $t0, 0($sp)	#PUSH
		subu  $sp, $sp, 4
		lw    $t1, 4($sp)	#POP
		addu  $sp, $sp, 4
		lw    $t0, 4($sp)	#POP
		addu  $sp, $sp, 4
		bge   $t0, $t1, .L11
		sw    0, 0($sp)	#PUSH
		subu  $sp, $sp, 4
		b     .L12
.L11:
		sw    1, 0($sp)	#PUSH
		subu  $sp, $sp, 4
.L12:
		lw    $t0, 4($sp)	#POP
		addu  $sp, $sp, 4
		beq   $t0, 0, .L13
		lw    $t0, -8($fp)
		sw    $t0, 0($sp)	#PUSH
		subu  $sp, $sp, 4
		lw    $t0, 4($sp)	#POP
		addu  $sp, $sp, 4
		li    $t1, -1
		mult  $t0, $t1
		mflo  $t0
		sw    $t0, 0($sp)	#PUSH
		subu  $sp, $sp, 4
		la    $t0, _a
		sw    $t0, 0($sp)	#PUSH
		subu  $sp, $sp, 4
		lw    $t1, 8($sp)
		sw    $t1, 0($t0)
		addu  $sp, $sp, 4		#disregard temps, leaving result on stack
		lw    $t0, 4($sp)	#POP
		addu  $sp, $sp, 4
.L13:
		lw    $t0, _a		#load value into T0
		sw    $t0, 0($sp)	#PUSH
		subu  $sp, $sp, 4
		lw    $t0, -8($fp)
		sw    $t0, 0($sp)	#PUSH
		subu  $sp, $sp, 4
		lw    $t1, 4($sp)	#POP
		addu  $sp, $sp, 4
		lw    $t0, 4($sp)	#POP
		addu  $sp, $sp, 4
		bne   $t0, $t1, .L14
		sw    0, 0($sp)	#PUSH
		subu  $sp, $sp, 4
		b     .L15
.L14:
		sw    1, 0($sp)	#PUSH
		subu  $sp, $sp, 4
.L15:
		lw    $t0, 4($sp)	#POP
		addu  $sp, $sp, 4
		beq   $t0, 0, .L16
		lw    $t0, -8($fp)
		sw    $t0, 0($sp)	#PUSH
		subu  $sp, $sp, 4
		li    $t0, 3		#load value into T0
		sw    $t0, 0($sp)	#PUSH
		subu  $sp, $sp, 4
		lw    $t1, 4($sp)	#POP
		addu  $sp, $sp, 4
		lw    $t0, 4($sp)	#POP
		addu  $sp, $sp, 4
		div   $t0, $t1
		mflo  $t0
		sw    $t0, 0($sp)	#PUSH
		subu  $sp, $sp, 4
		la    $t0, _a
		sw    $t0, 0($sp)	#PUSH
		subu  $sp, $sp, 4
		lw    $t1, 8($sp)
		sw    $t1, 0($t0)
		addu  $sp, $sp, 4		#disregard temps, leaving result on stack
		lw    $t0, 4($sp)	#POP
		addu  $sp, $sp, 4
.L16:
		lw    $t0, _a		#load value into T0
		sw    $t0, 0($sp)	#PUSH
		subu  $sp, $sp, 4
		lw    $t0, -8($fp)
		sw    $t0, 0($sp)	#PUSH
		subu  $sp, $sp, 4
		lw    $t1, 4($sp)	#POP
		addu  $sp, $sp, 4
		lw    $t0, 4($sp)	#POP
		addu  $sp, $sp, 4
		beq   $t0, $t1, .L17
		sw    0, 0($sp)	#PUSH
		subu  $sp, $sp, 4
		b     .L18
.L17:
		sw    1, 0($sp)	#PUSH
		subu  $sp, $sp, 4
.L18:
		lw    $t0, 4($sp)	#POP
		addu  $sp, $sp, 4
		beq   $t0, 0, .L19
		lw    $t0, -8($fp)
		sw    $t0, 0($sp)	#PUSH
		subu  $sp, $sp, 4
		li    $t0, 2		#load value into T0
		sw    $t0, 0($sp)	#PUSH
		subu  $sp, $sp, 4
		lw    $t1, 4($sp)	#POP
		addu  $sp, $sp, 4
		lw    $t0, 4($sp)	#POP
		addu  $sp, $sp, 4
		mult  $t0, $t1
		mflo  $t0
		sw    $t0, 0($sp)	#PUSH
		subu  $sp, $sp, 4
		la    $t0, _a
		sw    $t0, 0($sp)	#PUSH
		subu  $sp, $sp, 4
		lw    $t1, 8($sp)
		sw    $t1, 0($t0)
		addu  $sp, $sp, 4		#disregard temps, leaving result on stack
		lw    $t0, 4($sp)	#POP
		addu  $sp, $sp, 4
.L19:
		lw    $t0, -12($fp)
		sw    $t0, 0($sp)	#PUSH
		subu  $sp, $sp, 4
		lw    $t0, 4($sp)	#POP
		addu  $sp, $sp, 4
		beq   $t0, 1, .L20
		lw    $t0, _z		#load value into T0
		sw    $t0, 0($sp)	#PUSH
		subu  $sp, $sp, 4
		lw    $t0, 4($sp)	#POP
		addu  $sp, $sp, 4
		beq   $t0, 1, .L20
		sw    0, 0($sp)	#PUSH
		subu  $sp, $sp, 4
		b     .L21
.L20:
		sw    1, 0($sp)	#PUSH
		subu  $sp, $sp, 4
.L21:
		lw    $t0, 4($sp)	#POP
		addu  $sp, $sp, 4
		beq   $t0, 0, .L22
		lw    $t0, -8($fp)
		sw    $t0, 0($sp)	#PUSH
		subu  $sp, $sp, 4
		li    $t0, 1		#load value into T0
		sw    $t0, 0($sp)	#PUSH
		subu  $sp, $sp, 4
		lw    $t1, 4($sp)	#POP
		addu  $sp, $sp, 4
		lw    $t0, 4($sp)	#POP
		addu  $sp, $sp, 4
		sub   $t0, $t0, $t1
		sw    $t0, 0($sp)	#PUSH
		subu  $sp, $sp, 4
		la    $t0, _a
		sw    $t0, 0($sp)	#PUSH
		subu  $sp, $sp, 4
		lw    $t1, 8($sp)
		sw    $t1, 0($t0)
		addu  $sp, $sp, 4		#disregard temps, leaving result on stack
		lw    $t0, 4($sp)	#POP
		addu  $sp, $sp, 4
.L22:
		lw    $t0, -12($fp)
		sw    $t0, 0($sp)	#PUSH
		subu  $sp, $sp, 4
		lw    $t0, 4($sp)	#POP
		addu  $sp, $sp, 4
		beq   $t0, 0, .L23
		lw    $t0, _z		#load value into T0
		sw    $t0, 0($sp)	#PUSH
		subu  $sp, $sp, 4
		lw    $t0, 4($sp)	#POP
		addu  $sp, $sp, 4
		beq   $t0, 0, .L23
		sw    1, 0($sp)	#PUSH
		subu  $sp, $sp, 4
		b     .L24
.L23:
		sw    0, 0($sp)	#PUSH
		subu  $sp, $sp, 4
.L24:
		lw    $t0, 4($sp)	#POP
		addu  $sp, $sp, 4
		beq   $t0, 0, .L25
		lw    $t0, -8($fp)
		sw    $t0, 0($sp)	#PUSH
		subu  $sp, $sp, 4
		li    $t0, 1		#load value into T0
		sw    $t0, 0($sp)	#PUSH
		subu  $sp, $sp, 4
		lw    $t1, 4($sp)	#POP
		addu  $sp, $sp, 4
		lw    $t0, 4($sp)	#POP
		addu  $sp, $sp, 4
		add   $t0, $t0, $t1
		sw    $t0, 0($sp)	#PUSH
		subu  $sp, $sp, 4
		la    $t0, _a
		sw    $t0, 0($sp)	#PUSH
		subu  $sp, $sp, 4
		lw    $t1, 8($sp)
		sw    $t1, 0($t0)
		addu  $sp, $sp, 4		#disregard temps, leaving result on stack
		lw    $t0, 4($sp)	#POP
		addu  $sp, $sp, 4
		b     .L26
.L25:
		sw    0, 0($sp)	#PUSH
		subu  $sp, $sp, 4
		la    $t0, -12($fp)
		sw    $t0, 0($sp)	#PUSH
		subu  $sp, $sp, 4
		lw    $t1, 8($sp)
		sw    $t1, 0($t0)
		addu  $sp, $sp, 4		#disregard temps, leaving result on stack
		lw    $t0, 4($sp)	#POP
		addu  $sp, $sp, 4
		.L26
.L28:
		li    $t0, 1		#load value into T0
		sw    $t0, 0($sp)	#PUSH
		subu  $sp, $sp, 4
		li    $t0, 0		#load value into T0
		sw    $t0, 0($sp)	#PUSH
		subu  $sp, $sp, 4
		lw    $t1, 4($sp)	#POP
		addu  $sp, $sp, 4
		lw    $t0, 4($sp)	#POP
		addu  $sp, $sp, 4
		beq   $t0, $t1, .L29
		sw    0, 0($sp)	#PUSH
		subu  $sp, $sp, 4
		b     .L30
.L29:
		sw    1, 0($sp)	#PUSH
		subu  $sp, $sp, 4
.L30:
		lw    $t0, 4($sp)	#POP
		addu  $sp, $sp, 4
		beq   $t0, 0, .L27
		b     .L28
.L27:
_f_Exit:
		lw    $ra, -20($fp)	#load return address
		move  $t0, $fp		#save control link
		lw    $fp, -24($fp)	#restore FP
		move  $sp, $t0		#restore SP
		jr    $ra		#return
		.text
_k:
		sw    $ra, 0($sp)	#PUSH
		subu  $sp, $sp, 4
		sw    $fp, 0($sp)	#PUSH
		subu  $sp, $sp, 4
		addu  $fp, $sp, 12
		li    $t0, 9		#load value into T0
		sw    $t0, 0($sp)	#PUSH
		subu  $sp, $sp, 4
		lw    $v0, 4($sp)	#POP
		addu  $sp, $sp, 4
		b     _k_Exit		#return fn
_k_Exit:
		lw    $ra, -4($fp)	#load return address
		move  $t0, $fp		#save control link
		lw    $fp, -8($fp)	#restore FP
		move  $sp, $t0		#restore SP
		jr    $ra		#return
		.text
		.globl main
main:				# METHOD ENTRY
__start:				# add __start label for main only
		sw    $ra, 0($sp)	#PUSH
		subu  $sp, $sp, 4
		sw    $fp, 0($sp)	#PUSH
		subu  $sp, $sp, 4
		addu  $fp, $sp, 8
		subu  $sp, $sp, 8
		li    $t0, 2		#load value into T0
		sw    $t0, 0($sp)	#PUSH
		subu  $sp, $sp, 4
		la    $t0, 0($fp)
		sw    $t0, 0($sp)	#PUSH
		subu  $sp, $sp, 4
		lw    $t1, 8($sp)
		sw    $t1, 0($t0)
		addu  $sp, $sp, 4		#disregard temps, leaving result on stack
		lw    $t0, 4($sp)	#POP
		addu  $sp, $sp, 4
		lw    $t0, -8($fp)
		sw    $t0, 0($sp)	#PUSH
		subu  $sp, $sp, 4
		jal   _k
		sw    $v0, 0($sp)	#PUSH
		subu  $sp, $sp, 4
		lw    $t0, 4($sp)	#POP
		addu  $sp, $sp, 4
_main_Exit:
		lw    $ra, 0($fp)	#load return address
		move  $t0, $fp		#save control link
		lw    $fp, -4($fp)	#restore FP
		move  $sp, $t0		#restore SP
		li    $v0, 10		#load exit code for syscall
		syscall		#only do this for main
